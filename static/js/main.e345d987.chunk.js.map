{"version":3,"sources":["components/Todo-list/Todo-item/Todo-item.module.scss","components/Header/Header.module.scss","components/Footer/Filter/Filter.module.scss","components/Footer/Counter/Counter.module.scss","components/Footer/Btn-clear-completed/Btn-clear-completed.module.scss","components/Footer/Footer.module.scss","components/App/App.module.scss","models/reducers/index.js","models/reducers/todosArray.js","models/actions/actionTypes.js","models/reducers/filter.js","constants/index.js","store/index.js","components/Header/Header.jsx","models/actions/index.js","components/Todo-list/Todo-item/Todo-item.jsx","components/Todo-list/Todo-list.jsx","components/Footer/Counter/Counter.jsx","components/Footer/Filter/Filter.jsx","components/Footer/Btn-clear-completed/Btn-clear-completed.jsx","components/Footer/Footer.jsx","components/App/App.jsx","index.js"],"names":["module","exports","combineReducers","todosArray","state","action","console","log","id","length","type","title","payload","completed","filter","it","map","idx","text","isAllCompleted","every","keyCode","initialState","localStorage","getItem","JSON","parse","store","createStore","reducer","Header","value","handleValidateValue","evt","validateValue","target","trim","replace","props","addTodo","setState","handleInputBlur","handleInputEnter","handleInputChange","header","styles","header__title","header__choiceAll","header__choiceAll_selected","header__input","this","selectAllTodo","className","classNames","hidden","onClick","placeholder","onChange","onBlur","onKeyDown","Component","mapDispatchToProps","connect","TodoItem","visibilityElement","isEditing","handleTaskDblClick","textContent","handleTodoEditingComplete","input","insertText","onTodoEdit","onTodoDelete","handleInputKeyDown","nextProps","nextState","prevProps","onAllCompletedChange","onTodoSelect","item","item_completed","item_editing","item__choice","item__task","item__delete","itemClass","hiddenClass","checkboxClass","crossClass","labelClass","checked","readOnly","autoFocus","onDoubleClick","role","aria-label","deleteTodo","selectTodo","editTodo","changeAllCompleted","visibleTodos","todos","filterTodos","handleTodoDelete","handleTodoEdit","key","memo","activeTodosAmount","counter","onFilterChange","classFilter","filter__btn","filter__btn_active","handleButtonClick","dataset","buttonsArray","data-filter","BtnClearCompleted","completedTodosAmount","onCompletedDelete","btnClass","btn","deleteComoletedTodo","changeFilter","activeTodoCount","completedTodoCount","footer","App","app","subscribe","setItem","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e345d987.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Todo-item_item__1ZlDl\",\"item__delete\":\"Todo-item_item__delete__1rd50\",\"item_completed\":\"Todo-item_item_completed__uK0Zn\",\"item__task\":\"Todo-item_item__task__1jFce\",\"item_editing\":\"Todo-item_item_editing__3v0xt\",\"item__choice\":\"Todo-item_item__choice__2tvre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__title\":\"Header_header__title__2hFUs\",\"header__choiceAll\":\"Header_header__choiceAll__1fHHi\",\"header__choiceAll_selected\":\"Header_header__choiceAll_selected__2ogM0\",\"header__input\":\"Header_header__input__ep3tJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3RCIX\",\"filter__btn\":\"Filter_filter__btn__A1KCQ\",\"filter__btn_active\":\"Filter_filter__btn_active__2BM0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__3RupU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Btn-clear-completed_btn__3vz4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3BT4Y\"};","import { combineReducers } from 'redux';\nimport todosArray from './todosArray';\nimport filter from './filter';\n\nexport default combineReducers({\n\ttodosArray,\n\tfilter,\n});\n","import {\n\tADD_TODO,\n\tDELETE_TODO,\n\tSELECT_TODO,\n\tEDIT_TODO,\n\tSELECT_ALL_TODO,\n\tDELETE_COMPLETED_TODO,\n} from '@models/actions/actionTypes';\n\nexport default (state = [], action) => {\n\tconsole.log(state);\n\tlet id = state.length === 0 ? 1 : state[state.length - 1].id + 1;\n\n\tswitch (action.type) {\n\t\tcase ADD_TODO:\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\t{\n\t\t\t\t\ttitle: action.payload,\n\t\t\t\t\tid: id++,\n\t\t\t\t\tcompleted: false,\n\t\t\t\t},\n\t\t\t];\n\n\t\tcase DELETE_TODO:\n\t\t\treturn state.filter((it) => !(it.id === action.payload));\n\n\t\tcase SELECT_TODO:\n\t\t\treturn state.map((it) => {\n\t\t\t\treturn it.id === action.payload\n\t\t\t\t\t? { ...it, completed: !it.completed }\n\t\t\t\t\t: it;\n\t\t\t});\n\n\t\tcase EDIT_TODO:\n\t\t\tconst { idx, text } = action.payload;\n\t\t\treturn state.map((it) => ({\n\t\t\t\t...it,\n\t\t\t\ttitle: it.id === idx ? text : it.title,\n\t\t\t}));\n\n\t\tcase SELECT_ALL_TODO:\n\t\t\tconst isAllCompleted = state.every((it) => it.completed);\n\t\t\treturn state.map((it) => ({\n\t\t\t\t...it,\n\t\t\t\tcompleted: !isAllCompleted,\n\t\t\t}));\n\n\t\tcase DELETE_COMPLETED_TODO:\n\t\t\treturn state.filter((it) => !it.completed);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","export const ADD_TODO = 'ADD_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const SELECT_TODO = 'SELECT_TODO';\nexport const EDIT_TODO = 'EDIT_TODO';\nexport const SELECT_ALL_TODO = 'SELECT_ALL_TODO';\nexport const DELETE_COMPLETED_TODO = 'DELETE_COMPLETED_TODO';\nexport const ALL_COMPLETED_CHANGE = 'ALL_COMPLETED_CHANGE';\nexport const FILTER_CHANGE = 'FILTER_CHANGE';\n","import { FILTER_CHANGE } from '@models/actions/actionTypes';\n\nexport default (state = 'all', action) => {\n\tswitch (action.type) {\n\t\tcase FILTER_CHANGE:\n\t\t\treturn action.payload;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","const keyCode = {\n\tENTER: 13,\n\tESC: 27,\n};\n\nconst locStorKey = 'todo-redux-state';\n\nexport { keyCode, locStorKey };\n","import { createStore } from 'redux';\nimport reducer from '@models/reducers';\nimport { locStorKey } from '@constants';\n\nconst initialState = localStorage.getItem(locStorKey)\n\t? JSON.parse(localStorage.getItem(locStorKey))\n\t: { todosArray: [], filter: 'all' };\n\nconst store = createStore(reducer, initialState);\n\nexport default store;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTodo, selectAllTodo } from '@models/actions';\nimport styles from './Header.module.scss';\nimport { keyCode } from '@constants';\nimport classNames from 'classnames';\n\nclass Header extends Component {\n\tstate = {\n\t\tvalue: '',\n\t};\n\n\thandleValidateValue = (evt) => {\n\t\tconst validateValue = evt.target.value.trim().replace(/\\s+/g, ' ');\n\t\tif (validateValue) this.props.addTodo(validateValue);\n\t\tthis.setState({ value: '' });\n\t};\n\n\thandleInputBlur = (evt) => {\n\t\tif (evt.type === 'blur') {\n\t\t\tthis.handleValidateValue(evt);\n\t\t}\n\t};\n\n\thandleInputEnter = (evt) => {\n\t\tif (evt.keyCode === keyCode.ENTER) {\n\t\t\tthis.handleValidateValue(evt);\n\t\t}\n\t};\n\n\thandleInputChange = (evt) => this.setState({ value: evt.target.value });\n\n\trender() {\n\t\tconst {\n\t\t\theader,\n\t\t\theader__title,\n\t\t\theader__choiceAll,\n\t\t\theader__choiceAll_selected,\n\t\t\theader__input,\n\t\t} = styles;\n\t\tconst { todosArray, selectAllTodo } = this.props;\n\t\tconst className = classNames(header__choiceAll, {\n\t\t\thidden: !todosArray.length,\n\t\t\t[header__choiceAll_selected]: todosArray.every((it) => it.completed),\n\t\t});\n\n\t\treturn (\n\t\t\t<header className={header}>\n\t\t\t\t<h1 className={header__title}>ToDo</h1>\n\t\t\t\t<span className={className} onClick={selectAllTodo}>\n\t\t\t\t\t&#8249;\n\t\t\t\t</span>\n\t\t\t\t<input\n\t\t\t\t\tclassName={header__input}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Что надо сделать?\"\n\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\tonKeyDown={this.handleInputEnter}\n\t\t\t\t/>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ todosArray }) => ({\n\ttodosArray,\n});\n\nconst mapDispatchToProps = {\n\taddTodo,\n\tselectAllTodo,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n\nHeader.propTypes = {\n\ttodosArray: PropTypes.arrayOf(PropTypes.object),\n\taddTodo: PropTypes.func,\n\tselectAllTodo: PropTypes.func,\n};\n","import {\n\tADD_TODO,\n\tDELETE_TODO,\n\tSELECT_TODO,\n\tEDIT_TODO,\n\tSELECT_ALL_TODO,\n\tDELETE_COMPLETED_TODO,\n\tALL_COMPLETED_CHANGE,\n\tFILTER_CHANGE,\n} from './actionTypes';\n\nexport const addTodo = (text) => {\n\treturn {\n\t\ttype: ADD_TODO,\n\t\tpayload: text,\n\t};\n};\n\nexport const deleteTodo = (id) => {\n\treturn {\n\t\ttype: DELETE_TODO,\n\t\tpayload: id,\n\t};\n};\n\nexport const selectTodo = (id) => {\n\treturn {\n\t\ttype: SELECT_TODO,\n\t\tpayload: id,\n\t};\n};\n\nexport const selectAllTodo = () => {\n\treturn {\n\t\ttype: SELECT_ALL_TODO,\n\t};\n};\n\nexport const editTodo = (idx, text) => {\n\treturn {\n\t\ttype: EDIT_TODO,\n\t\tpayload: { idx, text },\n\t};\n};\n\nexport const deleteComoletedTodo = () => {\n\treturn {\n\t\ttype: DELETE_COMPLETED_TODO,\n\t};\n};\n\nexport const changeAllCompleted = () => {\n\treturn {\n\t\ttype: ALL_COMPLETED_CHANGE,\n\t};\n};\n\nexport const changeFilter = (filter) => {\n\treturn {\n\t\ttype: FILTER_CHANGE,\n\t\tpayload: filter,\n\t};\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Todo-item.module.scss';\nimport { keyCode } from '@constants';\nimport classNames from 'classnames';\n\nexport default class TodoItem extends Component {\n\tstate = {\n\t\tvisibilityElement: 'visible',\n\t\tisEditing: false,\n\t\tvalue: '',\n\t};\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\treturn (\n\t\t\tthis.props.completed !== nextProps.completed ||\n\t\t\tthis.state.isEditing !== nextState.isEditing ||\n\t\t\tthis.state.value !== nextState.value\n\t\t);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.completed !== this.props.completed) {\n\t\t\tthis.props.onAllCompletedChange();\n\t\t}\n\t}\n\n\thandleTaskDblClick = (evt) => {\n\t\tthis.setState({\n\t\t\tvisibilityElement: 'hidden',\n\t\t\tisEditing: true,\n\t\t\tvalue: evt.target.textContent,\n\t\t});\n\t};\n\n\thandleTodoEditingComplete = (evt) => {\n\t\tconst input = evt.target;\n\t\tconst insertText =\n\t\t\tevt.keyCode === keyCode.ESC\n\t\t\t\t? this.props.title\n\t\t\t\t: input.value.trim().replace(/\\s+/g, ' ');\n\n\t\tif (!insertText) {\n\t\t\tthis.props.onTodoDelete();\n\t\t} else {\n\t\t\tthis.props.onTodoEdit(insertText);\n\t\t}\n\n\t\tthis.setState({ visibilityElement: 'visible', isEditing: false });\n\t};\n\n\thandleInputBlur = (evt) => {\n\t\tif (evt.type === 'blur') {\n\t\t\tthis.handleTodoEditingComplete(evt);\n\t\t}\n\t};\n\n\thandleInputKeyDown = (evt) => {\n\t\tif (evt.keyCode === keyCode.ENTER || evt.keyCode === keyCode.ESC) {\n\t\t\tthis.handleTodoEditingComplete(evt);\n\t\t}\n\t};\n\n\thandleInputChange = (evt) => {\n\t\tthis.setState({ value: evt.target.value });\n\t};\n\n\trender() {\n\t\tconst { title, completed, onTodoSelect, onTodoDelete } = this.props;\n\t\tconst { visibilityElement, isEditing, value } = this.state;\n\t\tconst {\n\t\t\titem,\n\t\t\titem_completed,\n\t\t\titem_editing,\n\t\t\titem__choice,\n\t\t\titem__task,\n\t\t\titem__delete,\n\t\t} = styles;\n\n\t\tconst itemClass = classNames(item, {\n\t\t\t[item_completed]: completed,\n\t\t\t[item_editing]: isEditing,\n\t\t});\n\n\t\tconst hiddenClass = { hidden: visibilityElement === 'hidden' };\n\n\t\tconst checkboxClass = classNames(item__choice, hiddenClass);\n\t\tconst crossClass = classNames(item__delete, hiddenClass);\n\t\tconst labelClass = classNames(hiddenClass);\n\n\t\treturn (\n\t\t\t<div className={itemClass}>\n\t\t\t\t<input\n\t\t\t\t\tclassName={checkboxClass}\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tonClick={onTodoSelect}\n\t\t\t\t\tchecked={completed}\n\t\t\t\t\treadOnly\n\t\t\t\t/>\n\t\t\t\t<label className={labelClass}>&#10003;</label>\n\t\t\t\t{isEditing ? (\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName={item__task}\n\t\t\t\t\t\tonKeyDown={this.handleInputKeyDown}\n\t\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<span className={item__task} onDoubleClick={this.handleTaskDblClick}>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\n\t\t\t\t<button className={crossClass} onClick={onTodoDelete}>\n\t\t\t\t\t<span role=\"img\" aria-label=\"cross\">\n\t\t\t\t\t\t&#10060;\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTodoItem.propTypes = {\n\ttitle: PropTypes.string,\n\tcompleted: PropTypes.bool,\n\tonTodoDelete: PropTypes.func,\n\tonTodoEdit: PropTypes.func,\n\tonTodoSelect: PropTypes.func,\n\tonAllCompletedChange: PropTypes.func,\n};\n","import React from 'react';\nimport TodoItem from './Todo-item';\nimport { connect } from 'react-redux';\nimport {\n\tdeleteTodo,\n\tselectTodo,\n\teditTodo,\n\tchangeAllCompleted,\n} from '@models/actions';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({\n\ttodosArray,\n\tfilter,\n\tselectTodo,\n\tdeleteTodo,\n\teditTodo,\n\tchangeAllCompleted,\n}) => {\n\tconst filterTodos = (todos, filter) => {\n\t\tswitch (filter) {\n\t\t\tcase 'all':\n\t\t\t\treturn todos;\n\t\t\tcase 'active':\n\t\t\t\treturn todos.filter((it) => !it.completed);\n\t\t\tcase 'completed':\n\t\t\t\treturn todos.filter((it) => it.completed);\n\t\t\tdefault:\n\t\t\t\treturn todos;\n\t\t}\n\t};\n\tconst visibleTodos = filterTodos(todosArray, filter);\n\n\tconst handleTodoSelect = (id) => () => selectTodo(id);\n\tconst handleTodoDelete = (id) => () => deleteTodo(id);\n\tconst handleTodoEdit = (id) => (text) => editTodo(id, text);\n\n\tconst todos = visibleTodos.map((it) => {\n\t\treturn (\n\t\t\t<li key={it.id}>\n\t\t\t\t<TodoItem\n\t\t\t\t\ttitle={it.title}\n\t\t\t\t\tcompleted={it.completed}\n\t\t\t\t\tonTodoSelect={handleTodoSelect(it.id)}\n\t\t\t\t\tonTodoDelete={handleTodoDelete(it.id)}\n\t\t\t\t\tonTodoEdit={handleTodoEdit(it.id)}\n\t\t\t\t\tonAllCompletedChange={changeAllCompleted}\n\t\t\t\t/>\n\t\t\t</li>\n\t\t);\n\t});\n\n\treturn <ul className=\"todo-list\">{todos}</ul>;\n};\n\nconst mapStateToProps = ({ todosArray, filter }) => ({\n\ttodosArray,\n\tfilter,\n});\n\nconst mapDispatchToProps = {\n\tdeleteTodo,\n\tselectTodo,\n\teditTodo,\n\tchangeAllCompleted,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n\nTodoList.propTypes = {\n\ttodosArray: PropTypes.arrayOf(PropTypes.object),\n\tfilter: PropTypes.string,\n\tdeleteTodo: PropTypes.func,\n\teditTodo: PropTypes.func,\n\tselectTodo: PropTypes.func,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Counter.module.scss';\n\nconst Counter = ({ activeTodosAmount }) => {\n\treturn (\n\t\t<span className={styles.counter}>\n\t\t\tОсталось заданий:<b>{activeTodosAmount}</b>\n\t\t</span>\n\t);\n};\n\nexport default memo(Counter);\n\nCounter.propTypes = {\n\tactiveTodosAmount: PropTypes.number,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\nimport classNames from 'classnames';\n\nconst Filter = ({ onFilterChange, filter }) => {\n\tconst { filter: classFilter, filter__btn, filter__btn_active } = styles;\n\n\tconst buttons = [\n\t\t{ title: 'Все', filter: 'all' },\n\t\t{ title: 'Активные', filter: 'active' },\n\t\t{ title: 'Завершенные', filter: 'completed' },\n\t];\n\n\tconst handleButtonClick = (evt) => {\n\t\tonFilterChange(evt.target.dataset.filter);\n\t};\n\n\tconst buttonsArray = buttons.map((it) => {\n\t\tconst className = classNames(filter__btn, {\n\t\t\t[filter__btn_active]: it.filter === filter,\n\t\t});\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\tclassName={className}\n\t\t\t\ttype=\"button\"\n\t\t\t\tkey={it.filter}\n\t\t\t\tdata-filter={it.filter}\n\t\t\t\tonClick={handleButtonClick}\n\t\t\t>\n\t\t\t\t{it.title}\n\t\t\t</button>\n\t\t);\n\t});\n\n\treturn <div className={classFilter}>{buttonsArray}</div>;\n};\n\nexport default memo(Filter);\n\nFilter.propTypes = {\n\tonFilterChange: PropTypes.func,\n\tfilter: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Btn-clear-completed.module.scss';\nimport classNames from 'classnames';\n\nexport default class BtnClearCompleted extends Component {\n\tshouldComponentUpdate(nextProps) {\n\t\treturn (\n\t\t\t(this.props.completedTodosAmount === 0 &&\n\t\t\t\tnextProps.completedTodosAmount > 0) ||\n\t\t\t(this.props.completedTodosAmount > 0 &&\n\t\t\t\tnextProps.completedTodosAmount === 0)\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { completedTodosAmount, onCompletedDelete } = this.props;\n\t\tconst btnClass = classNames(styles.btn, {\n\t\t\thidden: completedTodosAmount === 0,\n\t\t});\n\n\t\treturn (\n\t\t\t<button className={btnClass} onClick={onCompletedDelete}>\n\t\t\t\tУдалить завершенные\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nBtnClearCompleted.propTypes = {\n\tcompletedTodosAmount: PropTypes.number,\n\tonCompletedDelete: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Counter from './Counter';\nimport Filter from './Filter';\nimport BtnClearCompleted from './Btn-clear-completed';\nimport { connect } from 'react-redux';\nimport { deleteComoletedTodo, changeFilter } from '@models/actions';\nimport styles from './Footer.module.scss';\n\nconst Footer = ({ todosArray, deleteComoletedTodo, changeFilter, filter }) => {\n\tconst activeTodoCount = todosArray.filter((it) => it.completed === false)\n\t\t.length;\n\tconst completedTodoCount = todosArray.length - activeTodoCount;\n\n\tif (todosArray.length === 0) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<footer className={styles.footer}>\n\t\t\t<Counter activeTodosAmount={activeTodoCount} />\n\t\t\t<Filter onFilterChange={changeFilter} filter={filter} />\n\t\t\t<BtnClearCompleted\n\t\t\t\tcompletedTodosAmount={completedTodoCount}\n\t\t\t\tonCompletedDelete={deleteComoletedTodo}\n\t\t\t/>\n\t\t</footer>\n\t);\n};\n\nconst mapStateToProps = ({ todosArray, filter }) => ({\n\ttodosArray,\n\tfilter,\n});\n\nconst mapDispatchToProps = { deleteComoletedTodo, changeFilter };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n\nFooter.propTypes = {\n\ttodosArray: PropTypes.arrayOf(PropTypes.object),\n\tchangeFilter: PropTypes.func,\n\tfilter: PropTypes.string,\n\tdeleteComoletedTodo: PropTypes.func,\n};\n","import React from 'react';\nimport Header from '@components/Header';\nimport TodoList from '@components/Todo-list';\nimport Footer from '@components/Footer';\nimport styles from './App.module.scss';\n\nconst App = () => {\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<Header />\n\t\t\t<main>\n\t\t\t\t<TodoList />\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { locStorKey } from '@constants';\n\nimport '@styles/reset.css';\nimport '@styles/scaffolding.scss';\nimport App from '@components/App';\n\nstore.subscribe(() => {\n\tlocalStorage.setItem(locStorKey, JSON.stringify(store.getState()));\n});\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}