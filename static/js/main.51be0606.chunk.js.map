{"version":3,"sources":["components/Todo-list/Todo-item/Todo-item.module.scss","components/Header/Header.module.scss","components/Footer/Filter/Filter.module.scss","components/Footer/Counter/Counter.module.scss","components/Footer/Btn-clear-completed/Btn-clear-completed.module.scss","components/Footer/Footer.module.scss","components/App/App.module.scss","models/actions/actionTypes.js","models/reducers/todosArray.js","models/reducers/filter.js","models/reducers/allCompleted.js","models/reducers/index.js","constants/index.js","store/index.js","components/Header/Header.jsx","models/actions/index.js","components/Todo-list/Todo-item/Todo-item.jsx","components/Todo-list/Todo-list.jsx","components/Footer/Counter/Counter.jsx","components/Footer/Filter/Filter.jsx","components/Footer/Btn-clear-completed/Btn-clear-completed.jsx","components/Footer/Footer.jsx","components/App/App.jsx","index.js"],"names":["module","exports","ADD_TODO","DELETE_TODO","SELECT_TODO","EDIT_TODO","SELECT_ALL_TODO","DELETE_COMPLETED_TODO","FILTER_CHANGE","ALL_COMPLETED_CHANGE","updateTodosArray","state","action","undefined","title","todosArray","allCompleted","id","length","type","payload","completed","filter","it","map","idx","text","updateFilter","updateAllCompleted","every","reducer","keyCode","persistedState","localStorage","getItem","JSON","parse","store","createStore","Header","value","handleValidateValue","evt","validateValue","target","trim","replace","props","addTodo","setState","handleInputBlur","handleInputEnter","handleInputChange","header","styles","header__title","header__choiceAll","header__choiceAll_selected","header__input","this","selectAllTodo","className","classNames","hidden","onClick","placeholder","onChange","onBlur","onKeyDown","Component","mapDispatchToProps","connect","TodoItem","visibilityElement","isEditing","handleTaskDblClick","textContent","handleTodoEditingComplete","input","insertText","onTodoEdit","onTodoDelete","handleInputKeyDown","nextProps","nextState","prevProps","onAllCompletedChange","onTodoSelect","item","item_completed","item_editing","item__choice","item__task","item__delete","itemClass","hiddenClass","checkboxClass","crossClass","labelClass","checked","readOnly","autoFocus","onDoubleClick","role","aria-label","deleteTodo","selectTodo","editTodo","changeAllCompleted","todos","filterTodos","key","memo","activeTodosAmount","counter","onFilterChange","classFilter","filter__btn","filter__btn_active","handleButtonClick","dataset","buttonsArray","data-filter","BtnClearCompleted","completedTodosAmount","onCompletedDelete","btnClass","btn","deleteComoletedTodo","changeFilter","activeTodoCount","completedTodoCount","footer","App","app","subscribe","setItem","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51be0606.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Todo-item_item__1ZlDl\",\"item__delete\":\"Todo-item_item__delete__1rd50\",\"item_completed\":\"Todo-item_item_completed__uK0Zn\",\"item__task\":\"Todo-item_item__task__1jFce\",\"item_editing\":\"Todo-item_item_editing__3v0xt\",\"item__choice\":\"Todo-item_item__choice__2tvre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__title\":\"Header_header__title__2hFUs\",\"header__choiceAll\":\"Header_header__choiceAll__1fHHi\",\"header__choiceAll_selected\":\"Header_header__choiceAll_selected__2ogM0\",\"header__input\":\"Header_header__input__ep3tJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3RCIX\",\"filter__btn\":\"Filter_filter__btn__A1KCQ\",\"filter__btn_active\":\"Filter_filter__btn_active__2BM0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__3RupU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Btn-clear-completed_btn__3vz4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3BT4Y\"};","const actionTypes = {\n\tADD_TODO: 'ADD_TODO',\n\tDELETE_TODO: 'DELETE_TODO',\n\tSELECT_TODO: 'SELECT_TODO',\n\tEDIT_TODO: 'EDIT_TODO',\n\tSELECT_ALL_TODO: 'SELECT_ALL_TODO',\n\tDELETE_COMPLETED_TODO: 'DELETE_COMPLETED_TODO',\n\tALL_COMPLETED_CHANGE: 'ALL_COMPLETED_CHANGE',\n\tFILTER_CHANGE: 'FILTER_CHANGE',\n};\n\nconst {\n\tADD_TODO,\n\tDELETE_TODO,\n\tSELECT_TODO,\n\tEDIT_TODO,\n\tSELECT_ALL_TODO,\n\tDELETE_COMPLETED_TODO,\n\tFILTER_CHANGE,\n\tALL_COMPLETED_CHANGE,\n} = actionTypes;\n\nexport {\n\tADD_TODO,\n\tDELETE_TODO,\n\tSELECT_TODO,\n\tEDIT_TODO,\n\tSELECT_ALL_TODO,\n\tDELETE_COMPLETED_TODO,\n\tFILTER_CHANGE,\n\tALL_COMPLETED_CHANGE,\n};\n","import {\n\tADD_TODO,\n\tDELETE_TODO,\n\tSELECT_TODO,\n\tEDIT_TODO,\n\tSELECT_ALL_TODO,\n\tDELETE_COMPLETED_TODO,\n} from '@models/actions/actionTypes';\n\nconst updateTodosArray = (state, action) => {\n\tif (state === undefined) {\n\t\treturn [];\n\t}\n\n\tconst { todosArray, allCompleted } = state;\n\tlet id =\n\t\ttodosArray.length === 0 ? 1 : todosArray[todosArray.length - 1].id + 1;\n\n\tswitch (action.type) {\n\t\tcase ADD_TODO:\n\t\t\tconst createTodo = (title) => {\n\t\t\t\treturn {\n\t\t\t\t\ttitle,\n\t\t\t\t\tid: id++,\n\t\t\t\t\tcompleted: false,\n\t\t\t\t};\n\t\t\t};\n\t\t\treturn [...todosArray, createTodo(action.payload)];\n\n\t\tcase DELETE_TODO:\n\t\t\treturn todosArray.filter((it) => !(it.id === action.payload));\n\n\t\tcase SELECT_TODO:\n\t\t\treturn todosArray.map((it) => {\n\t\t\t\treturn it.id === action.payload\n\t\t\t\t\t? { ...it, completed: !it.completed }\n\t\t\t\t\t: it;\n\t\t\t});\n\n\t\tcase EDIT_TODO:\n\t\t\tconst { idx, text } = action.payload;\n\t\t\treturn todosArray.map((it) => ({\n\t\t\t\t...it,\n\t\t\t\ttitle: it.id === idx ? text : it.title,\n\t\t\t}));\n\n\t\tcase SELECT_ALL_TODO:\n\t\t\treturn todosArray.map((it) => ({\n\t\t\t\t...it,\n\t\t\t\tcompleted: !allCompleted,\n\t\t\t}));\n\n\t\tcase DELETE_COMPLETED_TODO:\n\t\t\treturn todosArray.filter((it) => !it.completed);\n\n\t\tdefault:\n\t\t\treturn todosArray;\n\t}\n};\n\nexport default updateTodosArray;\n","import { FILTER_CHANGE } from '@models/actions/actionTypes';\n\nconst updateFilter = (state, action) => {\n\tif (state === undefined) {\n\t\treturn 'all';\n\t}\n\n\tswitch (action.type) {\n\t\tcase FILTER_CHANGE:\n\t\t\treturn action.payload;\n\n\t\tdefault:\n\t\t\treturn state.filter;\n\t}\n};\n\nexport default updateFilter;\n","import {\n\tALL_COMPLETED_CHANGE,\n\tADD_TODO,\n\tSELECT_ALL_TODO,\n\tDELETE_COMPLETED_TODO,\n} from '@models/actions/actionTypes';\n\nconst updateAllCompleted = (state, action) => {\n\tif (state === undefined) {\n\t\treturn false;\n\t}\n\n\tconst { todosArray, allCompleted } = state;\n\n\tswitch (action.type) {\n\t\tcase ALL_COMPLETED_CHANGE:\n\t\t\treturn todosArray.every((it) => it.completed);\n\n\t\tcase ADD_TODO:\n\t\t\treturn false;\n\n\t\tcase SELECT_ALL_TODO:\n\t\t\treturn !allCompleted;\n\n\t\tcase DELETE_COMPLETED_TODO:\n\t\t\treturn false;\n\n\t\tdefault:\n\t\t\treturn allCompleted;\n\t}\n};\n\nexport default updateAllCompleted;\n","import updateTodosArray from './todosArray';\nimport updateFilter from './filter';\nimport updateAllCompleted from './allCompleted';\n\nconst reducer = (state, action) => {\n\treturn {\n\t\ttodosArray: updateTodosArray(state, action),\n\t\tfilter: updateFilter(state, action),\n\t\tallCompleted: updateAllCompleted(state, action),\n\t};\n};\n\nexport default reducer;\n","const keyCode = {\n\tENTER: 13,\n\tESC: 27,\n};\n\nconst locStorKey = 'todo-redux-state';\n\nexport { keyCode, locStorKey };\n","import { createStore } from 'redux';\nimport reducer from '@models/reducers';\nimport { locStorKey } from '@constants';\n\nconst persistedState = localStorage.getItem(locStorKey)\n\t? JSON.parse(localStorage.getItem(locStorKey))\n\t: undefined;\n\nconst store = createStore(reducer, persistedState);\n\nexport default store;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTodo, selectAllTodo } from '@models/actions';\nimport styles from './Header.module.scss';\nimport { keyCode } from '@constants';\nimport classNames from 'classnames';\n\nclass Header extends Component {\n\tstate = {\n\t\tvalue: '',\n\t};\n\n\thandleValidateValue = (evt) => {\n\t\tconst validateValue = evt.target.value.trim().replace(/\\s+/g, ' ');\n\t\tif (validateValue) this.props.addTodo(validateValue);\n\t\tthis.setState({ value: '' });\n\t};\n\n\thandleInputBlur = (evt) => {\n\t\tif (evt.type === 'blur') {\n\t\t\tthis.handleValidateValue(evt);\n\t\t}\n\t};\n\n\thandleInputEnter = (evt) => {\n\t\tif (evt.keyCode === keyCode.ENTER) {\n\t\t\tthis.handleValidateValue(evt);\n\t\t}\n\t};\n\n\thandleInputChange = (evt) => this.setState({ value: evt.target.value });\n\n\trender() {\n\t\tconst {\n\t\t\theader,\n\t\t\theader__title,\n\t\t\theader__choiceAll,\n\t\t\theader__choiceAll_selected,\n\t\t\theader__input,\n\t\t} = styles;\n\t\tconst { todosArray, selectAllTodo } = this.props;\n\t\tconst className = classNames(header__choiceAll, {\n\t\t\thidden: !todosArray.length,\n\t\t\t[header__choiceAll_selected]: todosArray.every((it) => it.completed),\n\t\t});\n\n\t\treturn (\n\t\t\t<header className={header}>\n\t\t\t\t<h1 className={header__title}>ToDo</h1>\n\t\t\t\t<span className={className} onClick={selectAllTodo}>\n\t\t\t\t\t&#8249;\n\t\t\t\t</span>\n\t\t\t\t<input\n\t\t\t\t\tclassName={header__input}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Что надо сделать?\"\n\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\tonKeyDown={this.handleInputEnter}\n\t\t\t\t/>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ todosArray }) => ({\n\ttodosArray,\n});\n\nconst mapDispatchToProps = {\n\taddTodo,\n\tselectAllTodo,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n\nHeader.propTypes = {\n\ttodosArray: PropTypes.arrayOf(PropTypes.object),\n\taddTodo: PropTypes.func,\n\tselectAllTodo: PropTypes.func,\n};\n","import {\n\tADD_TODO,\n\tDELETE_TODO,\n\tSELECT_TODO,\n\tEDIT_TODO,\n\tSELECT_ALL_TODO,\n\tDELETE_COMPLETED_TODO,\n\tALL_COMPLETED_CHANGE,\n\tFILTER_CHANGE,\n} from './actionTypes';\n\nconst addTodo = (text) => {\n\treturn {\n\t\ttype: ADD_TODO,\n\t\tpayload: text,\n\t};\n};\n\nconst deleteTodo = (id) => {\n\treturn {\n\t\ttype: DELETE_TODO,\n\t\tpayload: id,\n\t};\n};\n\nconst selectTodo = (id) => {\n\treturn {\n\t\ttype: SELECT_TODO,\n\t\tpayload: id,\n\t};\n};\n\nconst selectAllTodo = () => {\n\treturn {\n\t\ttype: SELECT_ALL_TODO,\n\t};\n};\n\nconst editTodo = (idx, text) => {\n\treturn {\n\t\ttype: EDIT_TODO,\n\t\tpayload: { idx, text },\n\t};\n};\n\nconst deleteComoletedTodo = () => {\n\treturn {\n\t\ttype: DELETE_COMPLETED_TODO,\n\t};\n};\n\nconst changeAllCompleted = () => {\n\treturn {\n\t\ttype: ALL_COMPLETED_CHANGE,\n\t};\n};\n\nconst changeFilter = (filter) => {\n\treturn {\n\t\ttype: FILTER_CHANGE,\n\t\tpayload: filter,\n\t};\n};\n\nexport {\n\taddTodo,\n\tdeleteTodo,\n\tselectTodo,\n\tselectAllTodo,\n\teditTodo,\n\tdeleteComoletedTodo,\n\tchangeAllCompleted,\n\tchangeFilter,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Todo-item.module.scss';\nimport { keyCode } from '@constants';\nimport classNames from 'classnames';\n\nexport default class TodoItem extends Component {\n\tstate = {\n\t\tvisibilityElement: 'visible',\n\t\tisEditing: false,\n\t\tvalue: '',\n\t};\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\treturn (\n\t\t\tthis.props.completed !== nextProps.completed ||\n\t\t\tthis.state.isEditing !== nextState.isEditing ||\n\t\t\tthis.state.value !== nextState.value\n\t\t);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.completed !== this.props.completed) {\n\t\t\tthis.props.onAllCompletedChange();\n\t\t}\n\t}\n\n\thandleTaskDblClick = (evt) => {\n\t\tthis.setState({\n\t\t\tvisibilityElement: 'hidden',\n\t\t\tisEditing: true,\n\t\t\tvalue: evt.target.textContent,\n\t\t});\n\t};\n\n\thandleTodoEditingComplete = (evt) => {\n\t\tconst input = evt.target;\n\t\tconst insertText =\n\t\t\tevt.keyCode === keyCode.ESC\n\t\t\t\t? this.props.title\n\t\t\t\t: input.value.trim().replace(/\\s+/g, ' ');\n\n\t\tif (!insertText) {\n\t\t\tthis.props.onTodoDelete();\n\t\t} else {\n\t\t\tthis.props.onTodoEdit(insertText);\n\t\t}\n\n\t\tthis.setState({ visibilityElement: 'visible', isEditing: false });\n\t};\n\n\thandleInputBlur = (evt) => {\n\t\tif (evt.type === 'blur') {\n\t\t\tthis.handleTodoEditingComplete(evt);\n\t\t}\n\t};\n\n\thandleInputKeyDown = (evt) => {\n\t\tif (evt.keyCode === keyCode.ENTER || evt.keyCode === keyCode.ESC) {\n\t\t\tthis.handleTodoEditingComplete(evt);\n\t\t}\n\t};\n\n\thandleInputChange = (evt) => {\n\t\tthis.setState({ value: evt.target.value });\n\t};\n\n\trender() {\n\t\tconst { title, completed, onTodoSelect, onTodoDelete } = this.props;\n\t\tconst { visibilityElement, isEditing, value } = this.state;\n\t\tconst {\n\t\t\titem,\n\t\t\titem_completed,\n\t\t\titem_editing,\n\t\t\titem__choice,\n\t\t\titem__task,\n\t\t\titem__delete,\n\t\t} = styles;\n\n\t\tconst itemClass = classNames(item, {\n\t\t\t[item_completed]: completed,\n\t\t\t[item_editing]: isEditing,\n\t\t});\n\n\t\tconst hiddenClass = { hidden: visibilityElement === 'hidden' };\n\n\t\tconst checkboxClass = classNames(item__choice, hiddenClass);\n\t\tconst crossClass = classNames(item__delete, hiddenClass);\n\t\tconst labelClass = classNames(hiddenClass);\n\n\t\treturn (\n\t\t\t<div className={itemClass}>\n\t\t\t\t<input\n\t\t\t\t\tclassName={checkboxClass}\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tonClick={onTodoSelect}\n\t\t\t\t\tchecked={completed}\n\t\t\t\t\treadOnly\n\t\t\t\t/>\n\t\t\t\t<label className={labelClass}>&#10003;</label>\n\t\t\t\t{isEditing ? (\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName={item__task}\n\t\t\t\t\t\tonKeyDown={this.handleInputKeyDown}\n\t\t\t\t\t\tonBlur={this.handleInputBlur}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<span className={item__task} onDoubleClick={this.handleTaskDblClick}>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\n\t\t\t\t<button className={crossClass} onClick={onTodoDelete}>\n\t\t\t\t\t<span role=\"img\" aria-label=\"cross\">\n\t\t\t\t\t\t&#10060;\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTodoItem.propTypes = {\n\ttitle: PropTypes.string,\n\tcompleted: PropTypes.bool,\n\tonTodoDelete: PropTypes.func,\n\tonTodoEdit: PropTypes.func,\n\tonTodoSelect: PropTypes.func,\n\tonAllCompletedChange: PropTypes.func,\n};\n","import React from 'react';\nimport TodoItem from './Todo-item';\nimport { connect } from 'react-redux';\nimport {\n\tdeleteTodo,\n\tselectTodo,\n\teditTodo,\n\tchangeAllCompleted,\n} from '@models/actions';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({\n\ttodosArray,\n\tfilter,\n\tselectTodo,\n\tdeleteTodo,\n\teditTodo,\n\tchangeAllCompleted,\n}) => {\n\tconst filterTodos = (todos, filter) => {\n\t\tswitch (filter) {\n\t\t\tcase 'all':\n\t\t\t\treturn todos;\n\t\t\tcase 'active':\n\t\t\t\treturn todos.filter((it) => !it.completed);\n\t\t\tcase 'completed':\n\t\t\t\treturn todos.filter((it) => it.completed);\n\t\t\tdefault:\n\t\t\t\treturn todos;\n\t\t}\n\t};\n\tconst visibleTodos = filterTodos(todosArray, filter);\n\tconst todos = visibleTodos.map((it) => {\n\t\treturn (\n\t\t\t<li key={it.id}>\n\t\t\t\t<TodoItem\n\t\t\t\t\ttitle={it.title}\n\t\t\t\t\tcompleted={it.completed}\n\t\t\t\t\tonTodoSelect={() => selectTodo(it.id)}\n\t\t\t\t\tonTodoDelete={() => deleteTodo(it.id)}\n\t\t\t\t\tonTodoEdit={(text) => editTodo(it.id, text)}\n\t\t\t\t\tonAllCompletedChange={changeAllCompleted}\n\t\t\t\t/>\n\t\t\t</li>\n\t\t);\n\t});\n\n\treturn <ul className=\"todo-list\">{todos}</ul>;\n};\n\nconst mapStateToProps = ({ todosArray, filter }) => ({\n\ttodosArray,\n\tfilter,\n});\n\nconst mapDispatchToProps = {\n\tdeleteTodo,\n\tselectTodo,\n\teditTodo,\n\tchangeAllCompleted,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n\nTodoList.propTypes = {\n\ttodosArray: PropTypes.arrayOf(PropTypes.object),\n\tfilter: PropTypes.string,\n\tdeleteTodo: PropTypes.func,\n\teditTodo: PropTypes.func,\n\tselectTodo: PropTypes.func,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Counter.module.scss';\n\nconst Counter = ({ activeTodosAmount }) => {\n\treturn (\n\t\t<span className={styles.counter}>\n\t\t\tОсталось заданий:<b>{activeTodosAmount}</b>\n\t\t</span>\n\t);\n};\n\nexport default memo(Counter);\n\nCounter.propTypes = {\n\tactiveTodosAmount: PropTypes.number,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\nimport classNames from 'classnames';\n\nconst Filter = ({ onFilterChange, filter }) => {\n\tconst { filter: classFilter, filter__btn, filter__btn_active } = styles;\n\n\tconst buttons = [\n\t\t{ title: 'Все', filter: 'all' },\n\t\t{ title: 'Активные', filter: 'active' },\n\t\t{ title: 'Завершенные', filter: 'completed' },\n\t];\n\n\tconst handleButtonClick = (evt) => {\n\t\tonFilterChange(evt.target.dataset.filter);\n\t};\n\n\tconst buttonsArray = buttons.map((it) => {\n\t\tconst className = classNames(filter__btn, {\n\t\t\t[filter__btn_active]: it.filter === filter,\n\t\t});\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\tclassName={className}\n\t\t\t\ttype=\"button\"\n\t\t\t\tkey={it.filter}\n\t\t\t\tdata-filter={it.filter}\n\t\t\t\tonClick={handleButtonClick}\n\t\t\t>\n\t\t\t\t{it.title}\n\t\t\t</button>\n\t\t);\n\t});\n\n\treturn <div className={classFilter}>{buttonsArray}</div>;\n};\n\nexport default memo(Filter);\n\nFilter.propTypes = {\n\tonFilterChange: PropTypes.func,\n\tfilter: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Btn-clear-completed.module.scss';\nimport classNames from 'classnames';\n\nexport default class BtnClearCompleted extends Component {\n\tshouldComponentUpdate(nextProps) {\n\t\treturn (\n\t\t\t(this.props.completedTodosAmount === 0 &&\n\t\t\t\tnextProps.completedTodosAmount > 0) ||\n\t\t\t(this.props.completedTodosAmount > 0 &&\n\t\t\t\tnextProps.completedTodosAmount === 0)\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { completedTodosAmount, onCompletedDelete } = this.props;\n\t\tconst btnClass = classNames(styles.btn, {\n\t\t\thidden: completedTodosAmount === 0,\n\t\t});\n\n\t\treturn (\n\t\t\t<button className={btnClass} onClick={onCompletedDelete}>\n\t\t\t\tУдалить завершенные\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nBtnClearCompleted.propTypes = {\n\tcompletedTodosAmount: PropTypes.number,\n\tonCompletedDelete: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Counter from './Counter';\nimport Filter from './Filter';\nimport BtnClearCompleted from './Btn-clear-completed';\nimport { connect } from 'react-redux';\nimport { deleteComoletedTodo, changeFilter } from '@models/actions';\nimport styles from './Footer.module.scss';\n\nconst Footer = ({ todosArray, deleteComoletedTodo, changeFilter, filter }) => {\n\tconst activeTodoCount = todosArray.filter((it) => it.completed === false)\n\t\t.length;\n\tconst completedTodoCount = todosArray.length - activeTodoCount;\n\n\tif (todosArray.length === 0) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<footer className={styles.footer}>\n\t\t\t<Counter activeTodosAmount={activeTodoCount} />\n\t\t\t<Filter onFilterChange={changeFilter} filter={filter} />\n\t\t\t<BtnClearCompleted\n\t\t\t\tcompletedTodosAmount={completedTodoCount}\n\t\t\t\tonCompletedDelete={deleteComoletedTodo}\n\t\t\t/>\n\t\t</footer>\n\t);\n};\n\nconst mapStateToProps = ({ todosArray, filter }) => ({\n\ttodosArray,\n\tfilter,\n});\n\nconst mapDispatchToProps = { deleteComoletedTodo, changeFilter };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n\nFooter.propTypes = {\n\ttodosArray: PropTypes.arrayOf(PropTypes.object),\n\tchangeFilter: PropTypes.func,\n\tfilter: PropTypes.string,\n\tdeleteComoletedTodo: PropTypes.func,\n};\n","import React from 'react';\nimport Header from '@components/Header';\nimport TodoList from '@components/Todo-list';\nimport Footer from '@components/Footer';\nimport styles from './App.module.scss';\n\nconst App = () => {\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<Header />\n\t\t\t<main>\n\t\t\t\t<TodoList />\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { locStorKey } from '@constants';\n\nimport '@styles/reset.css';\nimport '@styles/scaffolding.scss';\nimport App from '@components/App';\n\nstore.subscribe(() => {\n\tlocalStorage.setItem(locStorKey, JSON.stringify(store.getState()));\n});\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}